library(readxl)
# Leia o arquivo Excel
dados <- read_excel("./data.xlsx")
# Exiba a estrutura dos dados lidos
str(dados)
# Exiba as primeiras linhas dos dados
head(dados)
View(dados)
library(dplyr)
library(dplyr)
# Em seguida, vamos definir uma função para converter os valores
converter_expectativas <- function(valor) {
if (valor != "") {
return(TRUE)
} else {
return(FALSE)
}
}
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply(`Quais são as suas expectativas com relação à unidade curricular de Probabilidade e Estatística?`, converter_expectativas))
library(dplyr)
dados <- read_excel("./data.xlsx")
# Em seguida, vamos definir uma função para converter os valores
converter_expectativas <- function(valor) {
if (valor != "") {
return(TRUE)
} else {
return(FALSE)
}
}
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply(`Quais são as suas expectativas com relação à unidade curricular de Probabilidade e Estatística?`, converter_expectativas))
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = ifelse(`Quais são as suas expectativas com relação à unidade curricular de Probabilidade e Estatística?` != "", TRUE, FALSE))
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = ifelse(`Quais são as suas expectativas com relação à unidade curricular de Probabilidade e Estatística?` != "", TRUE, FALSE))
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply($`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?`))
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply($`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?`))
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply(`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?`))
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply(`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?`))
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("True", "False")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Expectativas em relação à unidade curricular de Probabilidade e Estatística por Sexo")
return(TRUE)
if (valor != "") {
return(TRUE)
} else {
return(FALSE)
}
library(dplyr)
dados <- read_excel("./data.xlsx")
# Em seguida, vamos definir uma função para converter os valores
converter_expectativas <- function(valor) {
if (valor != "") {
return(TRUE)
} else {
return(FALSE)
}
}
# Agora, vamos aplicar a função à coluna de expectativas e criar uma nova coluna com os valores convertidos
dados <- dados %>%
mutate(Expectativas_Convertidas = sapply(`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?`))
dados <- dados %>%
mutate(Expectativas_Convertidas = ifelse(`Quais são as suas expectativas com relação à unidade curricular de Probabilidade e Estatística?` != "", TRUE, FALSE))
dados <- dados %>%
mutate(Expectativas_Convertidas = ifelse(`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?` != "", TRUE, FALSE))
dados <- dados %>%
mutate(Expectativas_Convertidas = ifelse(`Quais são as suas expectativas com relação a unidade curricular de Probabilidade e Estatística?` != "", TRUE, FALSE))
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("True", "False")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Expectativas em relação à unidade curricular de Probabilidade e Estatística por Sexo")
library(ggplot2)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("True", "False")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Expectativas em relação à unidade curricular de Probabilidade e Estatística por Sexo")
# Exibindo o gráfico
print(grafico)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("True", "False")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo")
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("True", "False")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo")
# Exibindo o gráfico
print(grafico)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("Com Descrição", "Sem Descrição")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo")
# Exibindo o gráfico
print(grafico)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("Com Descrição", "Sem Descrição")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo") +  geom_text(aes(label = scales::percent(..count../sum(..count..)), y = ..count..),
position = position_stack(vjust = 0.5), stat = "count",
color = "white", size = 3)
# Exibindo o gráfico
print(grafico)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("Com Descrição", "Sem Descrição")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo") +    geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5), color = "white", size = 3)
# Exibindo o gráfico
print(grafico)
# Exibindo o gráfico
print(grafico)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("Com Descrição", "Sem Descrição")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo") +    geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5), color = "white", size = 3)
# Exibindo o gráfico
print(grafico)
# Agora, podemos criar o gráfico de barras com os valores convertidos
grafico <- ggplot(dados, aes(x = `Sexo`, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("Com Descrição", "Sem Descrição")) +
labs(x = "Sexo", y = "Contagem", fill = "Expectativas") +
ggtitle("Quantidade de expectativas descritas por Sexo") +  geom_text(aes(label = scales::percent(..count../sum(..count..)), y = ..count..),
position = position_stack(vjust = 0.5), stat = "count",
color = "white", size = 3)
# Exibindo o gráfico
print(grafico)
dados <- dados %>%
group_by(Sexo, Expectativas_Convertidas) %>%
summarise(Count = n()) %>%
ungroup()
# Calcular a porcentagem relativa a cada grupo (Sexo)
dados <- dados %>%
group_by(Sexo) %>%
mutate(Percentage = (Count / sum(Count)) * 100)
# Agora, podemos criar o gráfico de barras com os valores convertidos e adicionar as labels com as porcentagens
grafico <- ggplot(dados, aes(x = Sexo, y = Percentage, fill = Expectativas_Convertidas)) +
geom_bar(position = "stack", stat = "identity") +
scale_fill_manual(values = c("TRUE" = "blue", "FALSE" = "red"), labels = c("True", "False")) +
labs(x = "Sexo", y = "Porcentagem", fill = "Expectativas") +
ggtitle("Expectativas em relação à unidade curricular de Probabilidade e Estatística por Sexo") +
geom_text(aes(label = paste0(round(Percentage, 1), "%")), position = position_stack(vjust = 0.5), color = "white", size = 3)
# Exibindo o gráfico
print(grafico)
